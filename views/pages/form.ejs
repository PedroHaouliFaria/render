<!DOCTYPE html>
<html lang="en">
<head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!-- STYLES -->
    <link rel="stylesheet" href="/styles/aboutMe.css">
    <link rel="stylesheet" href="/styles/aboutOthes.css">
    <link rel="stylesheet" href="/styles/homePage.css">
    <link rel="stylesheet" href="/styles/login.css">
    <link rel="stylesheet" href="/styles/PerAssesment.css">
    <link rel="stylesheet" href="/styles/questions.css">
    <link rel="stylesheet" href="/styles/rating.css">
    <link rel="stylesheet" href="/styles/selfEvaluation.css">
    <link rel="stylesheet" href="/styles/teamPage.css">
    <link rel="stylesheet" href="/styles/tutor.css">
    <link rel="stylesheet" href="/styles/universe.css">
    <!-- STYLES END -->
</head>

<body>
    <!-- views/pages/userform.ejs -->

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRUD de Usuário</title>

    <h1>CRUD de Usuário</h1>
    
    <!-- Formulário de criação de usuário -->
    <h2>Criar Novo Usuário</h2>
    <form action="/user/create" method="post">
        <label for="name">Nome:</label>
        <input type="text" id="name" name="name" required=""><br>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required=""><br>
        <label for="password">Senha:</label>
        <input type="password" id="password" name="password" required=""><br>
        <button type="submit">Criar Usuário</button>
    </form>
    
    <!-- Formulário de leitura de usuário -->
    <h2>Buscar Usuário</h2>
    <form id="searchForm">
        <label for="userId">ID do Usuário:</label>
        <input type="text" id="userId" name="id" required=""><br>
        <button type="button" onclick="searchUser()">Buscar Usuário</button>
    </form>

    <script>
        // Função para buscar um usuário pelo ID
        function searchUser() {
            var userId = document.getElementById("userId").value;
            window.location.href = "/user/" + userId;
        }
    </script>

    <!-- Formulário de atualização de usuário -->
    <h2>Atualizar Usuário</h2>
    <form id="updateForm">
        <label for="updateId">ID do Usuário:</label>
        <input type="text" id="updateId" name="id" required=""><br>
        <label for="updateName">Novo Nome:</label>
        <input type="text" id="updateName" name="name" required=""><br>
        <label for="updateEmail">Novo Email:</label>
        <input type="email" id="updateEmail" name="email" required=""><br>
        <label for="updatePassword">Nova Senha:</label>
        <input type="password" id="updatePassword" name="password" required=""><br>
        <button type="button" onclick="updateUser()">Atualizar Usuário</button>
    </form>

    <script>
        // Função para atualizar um usuário
        function updateUser() {
            var userId = document.getElementById("updateId").value;
            var newName = document.getElementById("updateName").value;
            var newEmail = document.getElementById("updateEmail").value;
            var newPassword = document.getElementById("updatePassword").value;
            
            fetch('/user/' + userId, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: newName,
                    email: newEmail,
                    password: newPassword
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erro ao atualizar usuário');
                }
                window.location.href = "/user/" + userId;
            })
            .then(result => console.log('Usuário atualizado com sucesso: ', result)) 
            .catch(error => {
                console.error('Erro:', error);
            });   
        }
    </script>
</body>
</html>
